# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Copyright (c) 2024 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kubevirt.io: virt-operator
  name: virt-operator
  namespace: kubevirt
spec:
  replicas: {{ .Values.kubevirt.replicas }}
  selector:
    matchLabels:
      kubevirt.io: virt-operator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        kubevirt.io: virt-operator
        name: virt-operator
        prometheus.kubevirt.io: 'true'
      name: virt-operator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: kubevirt.io
                  operator: In
                  values:
                  - virt-operator
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - args:
        - --port
        - '8443'
        - -v
        - '2'
        command:
        - virt-operator
        env:
        - name: VIRT_OPERATOR_IMAGE
          value: {{ .Values.kubevirt.images.tags.virtOperatorImage }}
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['olm.targetNamespaces']
        - name: KUBEVIRT_VERSION
          value: v1.1.0
        image: {{ .Values.kubevirt.images.tags.virtOperatorImage }}
        imagePullPolicy: IfNotPresent
        name: virt-operator
        ports:
        - containerPort: {{ .Values.kubevirt.containerPorts.metricsPort }}
          name: metrics
          protocol: TCP
        - containerPort: {{ .Values.kubevirt.containerPorts.webhooksPort }}
          name: webhooks
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /metrics
            port: {{ .Values.kubevirt.readinessProbePort }}
            scheme: HTTPS
          initialDelaySeconds: 5
          timeoutSeconds: 10
        resources:
          requests:
            memory: {{ .Values.kubevirt.resources.requests.memory }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /etc/virt-operator/certificates
          name: kubevirt-operator-certs
          readOnly: true
        - mountPath: /profile-data
          name: profile-data
      imagePullSecrets:
      - name: {{ .Values.kubevirt.imagePullSecrets }}
      initContainers:
      - command:
        - sh
        - -c
        - rm -rf /var/opt/kubevirt/*;mkdir -p /var/opt/kubevirt/; mv /virtctl-v1.1.0-linux-amd64
          /var/opt/kubevirt/; chmod 755 /var/opt/kubevirt/; cp -sf /var/opt/kubevirt/virtctl-v1.1.0-linux-amd64
          /var/opt/kubevirt/virtctl
        image: {{ .Values.kubevirt.images.tags.virtCtlImage }}
        imagePullPolicy: IfNotPresent
        name: virtctl-init-container
        volumeMounts:
        - mountPath: /var/opt/
          name: controller-dir
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ''
      priorityClassName: kubevirt-cluster-critical
      securityContext:
        runAsNonRoot: false
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kubevirt-operator
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - name: kubevirt-operator-certs
        secret:
          optional: true
          secretName: kubevirt-operator-certs
      - emptyDir: {}
        name: profile-data
      - hostPath:
          path: /var/opt
          type: Directory
        name: controller-dir

[tox]
envlist = flake8,py39,pylint,bandit,yamllint
minversion = 2.9
skipsdist = True

# tox does not work if the path to the workdir is too long, so move it to /tmp
toxworkdir = /tmp/{env:USER}_k8skubvirt
stxdir = {toxinidir}/../../..
distshare={toxworkdir}/.tox/distshare

[testenv]
basepython = python3.9
usedevelop = True

allowlist_externals = bash
                      find

install_command = pip install -v -v -v \
    -c{toxinidir}/upper-constraints.txt \
    -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/starlingx/root/raw/branch/master/build-tools/requirements/debian/upper-constraints.txt} \
    {opts} {packages}

# Note the hash seed is set to 0 until can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         PIP_RESOLVER_DEBUG=0
         PYTHONDONTWRITEBYTECODE=1
         OS_TEST_PATH=./k8sapp_kubevirt/tests
         LANG=en_US.UTF-8
         LANGUAGE=en_US:en
         LC_ALL=C
         SYSINV_TEST_ENV=True
         TOX_WORK_DIR={toxworkdir}
         PYLINTHOME={toxworkdir}

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
       -e{[tox]stxdir}/config/sysinv/sysinv/sysinv
       -e{[tox]stxdir}/config/tsconfig/tsconfig
       -e{[tox]stxdir}/fault/fm-api/source
       -e{[tox]stxdir}/fault/python-fmclient/fmclient
       -e{[tox]stxdir}/utilities/ceph/python-cephclient/python-cephclient
       -e{[tox]stxdir}/update/sw-patch/cgcs-patch

commands =
  find . -type f -name "*.pyc" -delete

[flake8]
exclude = build,dist,tools,.eggs
max-line-length=100

[testenv:flake8]
deps = -r{toxinidir}/test-requirements.txt
commands =
  flake8 {posargs} .

[testenv:py39]
commands =
  {[testenv]commands}
  stestr run {posargs}
  stestr slowest

[testenv:pep8]
deps = {[testenv:flake8]deps}
commands = {[testenv:flake8]commands}

[testenv:venv]
commands = {posargs}

[bandit]
# The following bandit tests are being skipped:
# B101: Test for use of assert
# B103: Test for setting permissive file permissions
# B104: Test for binding to all interfaces
# B105: Test for use of hard-coded password strings
# B108: Test for insecure usage of tmp file/directory
# B110: Try, Except, Pass detected.
# B303: Use of insecure MD2, MD4, MD5, or SHA1 hash function.
# B307: Blacklisted call to eval.
# B310: Audit url open for permitted schemes
# B311: Standard pseudo-random generators are not suitable for security/cryptographic purposes
# B314: Blacklisted calls to xml.etree.ElementTree
# B318: Blacklisted calls to xml.dom.minidom
# B320: Blacklisted calls to lxml.etree
# B404: Import of subprocess module
# B405: import xml.etree
# B408: import xml.minidom
# B410: import lxml
# B506: Test for use of yaml load
# B602: Test for use of popen with shell equals true
# B603: Test for use of subprocess without shell equals true
# B604: Test for any function with shell equals true
# B605: Test for starting a process with a shell
# B607: Test for starting a process with a partial path
# B608: Possible SQL injection vector through string-based query
#
# Note: 'skips' entry cannot be split across multiple lines
#
#skips = B101,B103,B104,B105,B108,B110,B303,B307,B310,B311,B314,B318,B320,B404,B405,B408,B410,B506,B602,B603,B604,B605,B607,B608
#exclude = tests

[testenv:bandit]
deps = -r{toxinidir}/test-requirements.txt
commands = bandit --ini tox.ini -n 5 -r k8sapp_kubevirt

[testenv:pylint]
commands =
     pylint {posargs} k8sapp_kubevirt --rcfile=./pylint.rc

[testenv:yamllint]
deps = yamllint
commands = bash -c "find ./ -iname '*.yaml' -type f -not -name 'metadata.yaml' -print0 | xargs -0 cat |  sed  's/\s*\{\{.*\}\}//' | yamllint -d relaxed -f parsable - ;[ $? -eq 0 ] && exit 0 || exit 1"

[stestr]
test_path = ./k8sapp_kubevirt

[testenv:cover]
# not sure is passenv is still needed
passenv = CURL_CA_BUNDLE
deps = {[testenv]deps}
setenv = {[testenv]setenv}
         PYTHON=coverage run --parallel-mode

commands =
  {[testenv]commands}
   coverage erase
   stestr run {posargs}
   coverage combine
   coverage html -d cover
   coverage xml -o cover/coverage.xml
   coverage report

[testenv:pip-missing-reqs]
# do not install test-requirements as that will pollute the virtualenv for
# determining missing packages
# this also means that pip-missing-reqs must be installed separately, outside
# of the requirements.txt files
deps = pip_missing_reqs
       -rrequirements.txt
commands=pip-missing-reqs -d k8sapp_kubevirt

[testenv:metadata]
install_command = pip install -v -v -v \
    -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/starlingx/root/raw/branch/master/build-tools/requirements/debian/upper-constraints.txt} \
    {opts} {packages}
# Pass top level app folder to 'sysinv-app tox' command.
commands =
  bash -c "echo $(dirname $(dirname $(pwd))) | xargs -n 1 sysinv-app tox"
